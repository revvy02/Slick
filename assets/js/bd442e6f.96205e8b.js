"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[599],{15340:function(e){e.exports=JSON.parse('{"functions":[{"name":"_tryHistory","desc":"Attempts to add the old value to the history depending on the depth and returns true if successful","params":[{"name":"oldValue","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","private":true,"source":{"line":24,"path":"src/Card.lua"}},{"name":"_trimHistory","desc":"Attempts to trim the history of the card depending on the current depth and returns true if successful","params":[],"returns":[],"function_type":"method","private":true,"source":{"line":39,"path":"src/Card.lua"}},{"name":"_findSignal","desc":"Finds the weak reference to the signal and generates it if specified","params":[{"name":"key","desc":"","lua_type":"any"},{"name":"generate","desc":"","lua_type":"bool"}],"returns":[],"function_type":"method","private":true,"source":{"line":61,"path":"src/Card.lua"}},{"name":"new","desc":"Creates a new Card object","params":[{"name":"initial","desc":"","lua_type":"any"},{"name":"reducers?","desc":"","lua_type":"table"}],"returns":[{"desc":"","lua_type":"Card"}],"function_type":"static","source":{"line":80,"path":"src/Card.lua"}},{"name":"setDepth","desc":"Sets how much history is tracked and removes any excess if the history size exceeds the depth","params":[{"name":"depth","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":100,"path":"src/Card.lua"}},{"name":"getDepth","desc":"Gets the depth of the card","params":[],"returns":[],"function_type":"method","source":{"line":110,"path":"src/Card.lua"}},{"name":"getHistory","desc":"Gets the history of the card depending on the card\'s depth","params":[],"returns":[],"function_type":"method","source":{"line":117,"path":"src/Card.lua"}},{"name":"getReducedSignal","desc":"Gets the signal that will be fired for a reducer if it\'s dispatched","params":[{"name":"reducer","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Signal"}],"function_type":"method","source":{"line":127,"path":"src/Card.lua"}},{"name":"getChangedSignal","desc":"Gets the signal that will be fired if the value changes","params":[],"returns":[{"desc":"","lua_type":"Signal"}],"function_type":"method","source":{"line":136,"path":"src/Card.lua"}},{"name":"setReducers","desc":"Sets the reducers for the key (should typically only be set once when the Key is instantiated)","params":[{"name":"reducers","desc":"","lua_type":"table"}],"returns":[],"function_type":"method","source":{"line":145,"path":"src/Card.lua"}},{"name":"rawsetValue","desc":"Sets the value without triggering any signals or history updates","params":[{"name":"value","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":154,"path":"src/Card.lua"}},{"name":"getValue","desc":"Gets the current value","params":[],"returns":[{"desc":"","lua_type":"any"}],"function_type":"method","source":{"line":163,"path":"src/Card.lua"}},{"name":"dispatch","desc":"Dispatches the current reducer to update the value while firing the changed and appropriate reduced signal","params":[{"name":"reducer","desc":"","lua_type":"string"},{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":173,"path":"src/Card.lua"}},{"name":"destroy","desc":"Prepares card for garbage collection","params":[],"returns":[],"function_type":"method","source":{"line":200,"path":"src/Card.lua"}}],"properties":[],"types":[],"name":"Card","desc":"Card class that holds a single value and lets changes be observed","source":{"line":15,"path":"src/Card.lua"}}')}}]);